name: Build Stunserver

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    name: Build for Multiple Platforms
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - debian:bullseye
          - linuxmint
          - fedora:latest
          - centos:7
          - rhel:8
          - archlinux:base
          - manjaro
          - alpine:latest
          - almalinux:latest
          - rockylinux:latest
          - macos-latest
          - anolisos
          - suse:latest
          - opensuse/tumbleweed
          - voidlinux
        arch:
          - amd64
          - arm64
      exclude:
        - os: alibabacloud-linux

    runs-on: ${{ matrix.os == 'macos-latest' && 'macos-latest' || 'ubuntu-latest' }}

    steps:
      - name: Set up Docker for non-native OS
        if: matrix.os != 'ubuntu-latest' && matrix.os != 'macos-latest'
        uses: addnab/docker-run-action@v3
        with:
          image: ${{ matrix.os }}
          options: --entrypoint ""

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install dependencies (Linux)
        if: runner.os == 'Linux'
        run: |
          if [ "${{ matrix.os }}" == "ubuntu-latest" ] || [ "${{ matrix.os }}" == "debian:bullseye" ] || [ "${{ matrix.os }}" == "linuxmint" ]; then
            sudo apt-get update
            sudo apt-get install -y build-essential cmake
          elif [[ "${{ matrix.os }}" =~ fedora|rhel|centos|almalinux|rockylinux ]]; then
            sudo yum install -y gcc cmake make
          elif [[ "${{ matrix.os }}" =~ archlinux|manjaro ]]; then
            sudo pacman -Syu --noconfirm gcc cmake make
          elif [ "${{ matrix.os }}" == "alpine:latest" ]; then
            apk add --no-cache build-base cmake
          elif [[ "${{ matrix.os }}" =~ suse|opensuse ]]; then
            sudo zypper install -y gcc cmake make
          elif [ "${{ matrix.os }}" == "voidlinux" ]; then
            sudo xbps-install -Sy gcc cmake make
          elif [[ "${{ matrix.os }}" =~ anolisos ]]; then
            sudo yum install -y gcc cmake make
          fi

      - name: Install dependencies (macOS)
        if: runner.os == 'macOS'
        run: |
          brew install cmake make

      - name: Build stunserver
        run: |
          mkdir -p build
          cd build
          cmake ..
          make -j$(nproc)

      - name: Archive binaries
        uses: actions/upload-artifact@v3
        with:
          name: stunserver-${{ matrix.os }}-${{ matrix.arch }}
          path: build/stunserver
